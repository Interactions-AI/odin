# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from midgard.server.models.base_model_ import Model
from midgard.server import util


class GPUTemperatureInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, gpu_temp: float=None, gpu_temp_max_threshold: float=None, gpu_temp_slow_threshold: float=None, unit: str=None):  # noqa: E501
        """GPUTemperatureInfo - a model defined in Swagger

        :param gpu_temp: The gpu_temp of this GPUTemperatureInfo.  # noqa: E501
        :type gpu_temp: float
        :param gpu_temp_max_threshold: The gpu_temp_max_threshold of this GPUTemperatureInfo.  # noqa: E501
        :type gpu_temp_max_threshold: float
        :param gpu_temp_slow_threshold: The gpu_temp_slow_threshold of this GPUTemperatureInfo.  # noqa: E501
        :type gpu_temp_slow_threshold: float
        :param unit: The unit of this GPUTemperatureInfo.  # noqa: E501
        :type unit: str
        """
        self.swagger_types = {
            'gpu_temp': float,
            'gpu_temp_max_threshold': float,
            'gpu_temp_slow_threshold': float,
            'unit': str
        }

        self.attribute_map = {
            'gpu_temp': 'gpuTemp',
            'gpu_temp_max_threshold': 'gpuTempMaxThreshold',
            'gpu_temp_slow_threshold': 'gpuTempSlowThreshold',
            'unit': 'unit'
        }
        self._gpu_temp = gpu_temp
        self._gpu_temp_max_threshold = gpu_temp_max_threshold
        self._gpu_temp_slow_threshold = gpu_temp_slow_threshold
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt) -> 'GPUTemperatureInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GPUTemperatureInfo of this GPUTemperatureInfo.  # noqa: E501
        :rtype: GPUTemperatureInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gpu_temp(self) -> float:
        """Gets the gpu_temp of this GPUTemperatureInfo.


        :return: The gpu_temp of this GPUTemperatureInfo.
        :rtype: float
        """
        return self._gpu_temp

    @gpu_temp.setter
    def gpu_temp(self, gpu_temp: float):
        """Sets the gpu_temp of this GPUTemperatureInfo.


        :param gpu_temp: The gpu_temp of this GPUTemperatureInfo.
        :type gpu_temp: float
        """

        self._gpu_temp = gpu_temp

    @property
    def gpu_temp_max_threshold(self) -> float:
        """Gets the gpu_temp_max_threshold of this GPUTemperatureInfo.


        :return: The gpu_temp_max_threshold of this GPUTemperatureInfo.
        :rtype: float
        """
        return self._gpu_temp_max_threshold

    @gpu_temp_max_threshold.setter
    def gpu_temp_max_threshold(self, gpu_temp_max_threshold: float):
        """Sets the gpu_temp_max_threshold of this GPUTemperatureInfo.


        :param gpu_temp_max_threshold: The gpu_temp_max_threshold of this GPUTemperatureInfo.
        :type gpu_temp_max_threshold: float
        """

        self._gpu_temp_max_threshold = gpu_temp_max_threshold

    @property
    def gpu_temp_slow_threshold(self) -> float:
        """Gets the gpu_temp_slow_threshold of this GPUTemperatureInfo.


        :return: The gpu_temp_slow_threshold of this GPUTemperatureInfo.
        :rtype: float
        """
        return self._gpu_temp_slow_threshold

    @gpu_temp_slow_threshold.setter
    def gpu_temp_slow_threshold(self, gpu_temp_slow_threshold: float):
        """Sets the gpu_temp_slow_threshold of this GPUTemperatureInfo.


        :param gpu_temp_slow_threshold: The gpu_temp_slow_threshold of this GPUTemperatureInfo.
        :type gpu_temp_slow_threshold: float
        """

        self._gpu_temp_slow_threshold = gpu_temp_slow_threshold

    @property
    def unit(self) -> str:
        """Gets the unit of this GPUTemperatureInfo.


        :return: The unit of this GPUTemperatureInfo.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this GPUTemperatureInfo.


        :param unit: The unit of this GPUTemperatureInfo.
        :type unit: str
        """

        self._unit = unit
