# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.task_status_definition import TaskStatusDefinition  # noqa: F401,E501
from swagger_server import util


class PipelineDefinition(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, job: str=None, version: str=None, tasks: List[TaskStatusDefinition]=None, name: str=None, status: str=None, message: str=None, submit_time: datetime=None, completion_time: datetime=None):  # noqa: E501
        """PipelineDefinition - a model defined in Swagger

        :param id: The id of this PipelineDefinition.  # noqa: E501
        :type id: str
        :param job: The job of this PipelineDefinition.  # noqa: E501
        :type job: str
        :param version: The version of this PipelineDefinition.  # noqa: E501
        :type version: str
        :param tasks: The tasks of this PipelineDefinition.  # noqa: E501
        :type tasks: List[TaskStatusDefinition]
        :param name: The name of this PipelineDefinition.  # noqa: E501
        :type name: str
        :param status: The status of this PipelineDefinition.  # noqa: E501
        :type status: str
        :param message: The message of this PipelineDefinition.  # noqa: E501
        :type message: str
        :param submit_time: The submit_time of this PipelineDefinition.  # noqa: E501
        :type submit_time: datetime
        :param completion_time: The completion_time of this PipelineDefinition.  # noqa: E501
        :type completion_time: datetime
        """
        self.swagger_types = {
            'id': str,
            'job': str,
            'version': str,
            'tasks': List[TaskStatusDefinition],
            'name': str,
            'status': str,
            'message': str,
            'submit_time': datetime,
            'completion_time': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'job': 'job',
            'version': 'version',
            'tasks': 'tasks',
            'name': 'name',
            'status': 'status',
            'message': 'message',
            'submit_time': 'submitTime',
            'completion_time': 'completionTime'
        }
        self._id = id
        self._job = job
        self._version = version
        self._tasks = tasks
        self._name = name
        self._status = status
        self._message = message
        self._submit_time = submit_time
        self._completion_time = completion_time

    @classmethod
    def from_dict(cls, dikt) -> 'PipelineDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PipelineDefinition of this PipelineDefinition.  # noqa: E501
        :rtype: PipelineDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this PipelineDefinition.


        :return: The id of this PipelineDefinition.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this PipelineDefinition.


        :param id: The id of this PipelineDefinition.
        :type id: str
        """

        self._id = id

    @property
    def job(self) -> str:
        """Gets the job of this PipelineDefinition.


        :return: The job of this PipelineDefinition.
        :rtype: str
        """
        return self._job

    @job.setter
    def job(self, job: str):
        """Sets the job of this PipelineDefinition.


        :param job: The job of this PipelineDefinition.
        :type job: str
        """

        self._job = job

    @property
    def version(self) -> str:
        """Gets the version of this PipelineDefinition.


        :return: The version of this PipelineDefinition.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this PipelineDefinition.


        :param version: The version of this PipelineDefinition.
        :type version: str
        """

        self._version = version

    @property
    def tasks(self) -> List[TaskStatusDefinition]:
        """Gets the tasks of this PipelineDefinition.


        :return: The tasks of this PipelineDefinition.
        :rtype: List[TaskStatusDefinition]
        """
        return self._tasks

    @tasks.setter
    def tasks(self, tasks: List[TaskStatusDefinition]):
        """Sets the tasks of this PipelineDefinition.


        :param tasks: The tasks of this PipelineDefinition.
        :type tasks: List[TaskStatusDefinition]
        """

        self._tasks = tasks

    @property
    def name(self) -> str:
        """Gets the name of this PipelineDefinition.


        :return: The name of this PipelineDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PipelineDefinition.


        :param name: The name of this PipelineDefinition.
        :type name: str
        """

        self._name = name

    @property
    def status(self) -> str:
        """Gets the status of this PipelineDefinition.


        :return: The status of this PipelineDefinition.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this PipelineDefinition.


        :param status: The status of this PipelineDefinition.
        :type status: str
        """

        self._status = status

    @property
    def message(self) -> str:
        """Gets the message of this PipelineDefinition.


        :return: The message of this PipelineDefinition.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this PipelineDefinition.


        :param message: The message of this PipelineDefinition.
        :type message: str
        """

        self._message = message

    @property
    def submit_time(self) -> datetime:
        """Gets the submit_time of this PipelineDefinition.


        :return: The submit_time of this PipelineDefinition.
        :rtype: datetime
        """
        return self._submit_time

    @submit_time.setter
    def submit_time(self, submit_time: datetime):
        """Sets the submit_time of this PipelineDefinition.


        :param submit_time: The submit_time of this PipelineDefinition.
        :type submit_time: datetime
        """

        self._submit_time = submit_time

    @property
    def completion_time(self) -> datetime:
        """Gets the completion_time of this PipelineDefinition.


        :return: The completion_time of this PipelineDefinition.
        :rtype: datetime
        """
        return self._completion_time

    @completion_time.setter
    def completion_time(self, completion_time: datetime):
        """Sets the completion_time of this PipelineDefinition.


        :param completion_time: The completion_time of this PipelineDefinition.
        :type completion_time: datetime
        """

        self._completion_time = completion_time
