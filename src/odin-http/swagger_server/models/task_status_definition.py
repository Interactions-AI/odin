# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.event_definition import EventDefinition  # noqa: F401,E501
from swagger_server import util


class TaskStatusDefinition(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, task: str=None, name: str=None, status: str=None, command: str=None, image: str=None, resource_type: str=None, resource_id: str=None, submit_time: datetime=None, completion_time: datetime=None, events: List[EventDefinition]=None):  # noqa: E501
        """TaskStatusDefinition - a model defined in Swagger

        :param id: The id of this TaskStatusDefinition.  # noqa: E501
        :type id: str
        :param task: The task of this TaskStatusDefinition.  # noqa: E501
        :type task: str
        :param name: The name of this TaskStatusDefinition.  # noqa: E501
        :type name: str
        :param status: The status of this TaskStatusDefinition.  # noqa: E501
        :type status: str
        :param command: The command of this TaskStatusDefinition.  # noqa: E501
        :type command: str
        :param image: The image of this TaskStatusDefinition.  # noqa: E501
        :type image: str
        :param resource_type: The resource_type of this TaskStatusDefinition.  # noqa: E501
        :type resource_type: str
        :param resource_id: The resource_id of this TaskStatusDefinition.  # noqa: E501
        :type resource_id: str
        :param submit_time: The submit_time of this TaskStatusDefinition.  # noqa: E501
        :type submit_time: datetime
        :param completion_time: The completion_time of this TaskStatusDefinition.  # noqa: E501
        :type completion_time: datetime
        :param events: The events of this TaskStatusDefinition.  # noqa: E501
        :type events: List[EventDefinition]
        """
        self.swagger_types = {
            'id': str,
            'task': str,
            'name': str,
            'status': str,
            'command': str,
            'image': str,
            'resource_type': str,
            'resource_id': str,
            'submit_time': datetime,
            'completion_time': datetime,
            'events': List[EventDefinition]
        }

        self.attribute_map = {
            'id': 'id',
            'task': 'task',
            'name': 'name',
            'status': 'status',
            'command': 'command',
            'image': 'image',
            'resource_type': 'resourceType',
            'resource_id': 'resourceId',
            'submit_time': 'submitTime',
            'completion_time': 'completionTime',
            'events': 'events'
        }
        self._id = id
        self._task = task
        self._name = name
        self._status = status
        self._command = command
        self._image = image
        self._resource_type = resource_type
        self._resource_id = resource_id
        self._submit_time = submit_time
        self._completion_time = completion_time
        self._events = events

    @classmethod
    def from_dict(cls, dikt) -> 'TaskStatusDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TaskStatusDefinition of this TaskStatusDefinition.  # noqa: E501
        :rtype: TaskStatusDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this TaskStatusDefinition.


        :return: The id of this TaskStatusDefinition.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this TaskStatusDefinition.


        :param id: The id of this TaskStatusDefinition.
        :type id: str
        """

        self._id = id

    @property
    def task(self) -> str:
        """Gets the task of this TaskStatusDefinition.


        :return: The task of this TaskStatusDefinition.
        :rtype: str
        """
        return self._task

    @task.setter
    def task(self, task: str):
        """Sets the task of this TaskStatusDefinition.


        :param task: The task of this TaskStatusDefinition.
        :type task: str
        """

        self._task = task

    @property
    def name(self) -> str:
        """Gets the name of this TaskStatusDefinition.


        :return: The name of this TaskStatusDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this TaskStatusDefinition.


        :param name: The name of this TaskStatusDefinition.
        :type name: str
        """

        self._name = name

    @property
    def status(self) -> str:
        """Gets the status of this TaskStatusDefinition.


        :return: The status of this TaskStatusDefinition.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this TaskStatusDefinition.


        :param status: The status of this TaskStatusDefinition.
        :type status: str
        """

        self._status = status

    @property
    def command(self) -> str:
        """Gets the command of this TaskStatusDefinition.


        :return: The command of this TaskStatusDefinition.
        :rtype: str
        """
        return self._command

    @command.setter
    def command(self, command: str):
        """Sets the command of this TaskStatusDefinition.


        :param command: The command of this TaskStatusDefinition.
        :type command: str
        """

        self._command = command

    @property
    def image(self) -> str:
        """Gets the image of this TaskStatusDefinition.


        :return: The image of this TaskStatusDefinition.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this TaskStatusDefinition.


        :param image: The image of this TaskStatusDefinition.
        :type image: str
        """

        self._image = image

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this TaskStatusDefinition.


        :return: The resource_type of this TaskStatusDefinition.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this TaskStatusDefinition.


        :param resource_type: The resource_type of this TaskStatusDefinition.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def resource_id(self) -> str:
        """Gets the resource_id of this TaskStatusDefinition.


        :return: The resource_id of this TaskStatusDefinition.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id: str):
        """Sets the resource_id of this TaskStatusDefinition.


        :param resource_id: The resource_id of this TaskStatusDefinition.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def submit_time(self) -> datetime:
        """Gets the submit_time of this TaskStatusDefinition.


        :return: The submit_time of this TaskStatusDefinition.
        :rtype: datetime
        """
        return self._submit_time

    @submit_time.setter
    def submit_time(self, submit_time: datetime):
        """Sets the submit_time of this TaskStatusDefinition.


        :param submit_time: The submit_time of this TaskStatusDefinition.
        :type submit_time: datetime
        """

        self._submit_time = submit_time

    @property
    def completion_time(self) -> datetime:
        """Gets the completion_time of this TaskStatusDefinition.


        :return: The completion_time of this TaskStatusDefinition.
        :rtype: datetime
        """
        return self._completion_time

    @completion_time.setter
    def completion_time(self, completion_time: datetime):
        """Sets the completion_time of this TaskStatusDefinition.


        :param completion_time: The completion_time of this TaskStatusDefinition.
        :type completion_time: datetime
        """

        self._completion_time = completion_time

    @property
    def events(self) -> List[EventDefinition]:
        """Gets the events of this TaskStatusDefinition.


        :return: The events of this TaskStatusDefinition.
        :rtype: List[EventDefinition]
        """
        return self._events

    @events.setter
    def events(self, events: List[EventDefinition]):
        """Sets the events of this TaskStatusDefinition.


        :param events: The events of this TaskStatusDefinition.
        :type events: List[EventDefinition]
        """

        self._events = events
